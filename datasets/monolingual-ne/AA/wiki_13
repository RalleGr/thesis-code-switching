<doc id="1106" url="https://ne.wikipedia.org/wiki?curid=1106" title="युनिकोड">
युनिकोड

युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all scripts still in active use today, many scripts known only by scholars, and symbols which do not strictly represent scripts, like mathematics, linguistics and APL.

The creation of युनिकोड is an ambitious project to replace existing character sets, many of which are short in size and problematic in multilingual environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in internationalization of software and multilingual environments. Many recent standards such as XML, as well as system software such as operating systems, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional character encodings such as those defined by the ISO 8859 standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for bilingual कम्प्युटर processing (usually Roman characters and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant glyphs for such characters. In the case of Chinese characters, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see Han unification).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a web browser or word processor.

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic or Hebrew, and left-to-right scripts).

In 1997 a proposal was made by Michael Everson to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, and s which do not strictly represent scripts, like , and .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size and problematic in environments. Despite technical problems and limitations and criticism on process, today युनिकोड is considered the most complete character set and one of the largest, and has become the dominant encoding scheme in of and multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु and the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters and not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character and what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, and leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , and left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read and write and exchange data in Latin transliteration. The elvish scripts Tengwar and Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, and is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software and hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems and many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, and continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization and it shares its character repertoire with ISO/IEC 10646. युनिकोड and ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, and rendering, and enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, and युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, and in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, and 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, and interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) and UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC and UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 and UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 and UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 and codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, and codice_1 is the Zero-Width No-Break Space (a character with no appearance and no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape and so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text and many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe and Microsoft), Graphite (by SIL International), and AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics and stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron and acute above) and (e followed by the combining macron above and combining acute above) are identical in appearance, both giving an e with macron and acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology and fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations and political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard and the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters and their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, and Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium and ISO on additions to the repertoire and on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older and alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese and uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language and of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 and Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, and work continues on adding characters from the early literature of China, Korea, and Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems and limitations and criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT and its descendants Windows 2000 and Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD and Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set and the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards and are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, and many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode and HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 and XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters and the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF and any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits and symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 and 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", and Korean Hangul syllable "Nyaelh", respectively.

Free and retail fonts based on युनिकोड are common, since first TrueType and now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. There are several reasons for this: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; and operating systems and applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character and the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 and then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol and then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X and in Mac OS 8.5 and later: hold down the Option key, and type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 and newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl and Shift and enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 and over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, and pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still in active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short in size र problematic in environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme in of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used in the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड in intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role in text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character in an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings in order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language in Plane 1 of ISO/IEC 10646-2. The proposal was rejected in 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data in Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion in Plane 1 in 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based in California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest in text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) in 1991, र continues to develop standards based on that original work. युनिकोड was developed in conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, in depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans in written language. How these numbers are stored in text processing is another matter; problems result from the fact that much software in the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly in recent years. Similarly, in the East the double-byte character encodings cannot even in principle encode more than 65,536 characters, र in practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits in one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; in the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files in UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear in UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So in many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only in their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so in principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions in a font telling software how to properly output different character sequences. Another method sometimes employed in fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical in appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed in Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is in fact not a weakness in युनिकोड itself, but only uncovers gaps in rendering technology र fonts.

Some people, mostly in Japan, oppose युनिकोड in general, claiming technical limitations र political problems in process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed in युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used in Chinese, Korean, र Japanese, in spite of the presence of a majority of experts from all three countries in the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms in the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted in Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included in early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked in the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters in e-mail, depending on whether the characters are in e-mail headers such as the "Subject:" or in the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified in the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड in e-mail has been very slow. Most East-Asian text is still encoded in a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change in the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order in which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending in FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed in hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs in computing environments; र operating systems र applications are becoming increasingly intelligent in regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', in Mac OS X र in Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser in version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.

=== Multilingual

== शिर्षक अक्षर"[Italic text]
" ==

On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0321185781) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

See also: Mapping of युनिकोड characters

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_8 codice_9 codice_10 codice_11 codice_12 codice_13 codice_14 codice_15 codice_16 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s still मा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are short मा size र problematic मा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding scheme मा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are used मा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरु र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोड मा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's role मा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a character मा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodings मा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon language मा Plane 1 of ISO/IEC 10646-2. The proposal was rejected मा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange data मा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusion मा Plane 1 मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, based मा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interest मा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1) मा 1991, र continues to develop standards based on that original work. युनिकोड was developed मा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering, मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humans मा written language. How these numbers are stored मा text processing is another matter; problems result from the fact that much software मा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowly मा recent years. Similarly, मा the East the double-byte character encodings cannot even मा principle encode more than 65,536 characters, र मा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bits मा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character; मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text files मा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appear मा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. So मा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded only मा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, so मा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructions मा a font telling software how to properly output different character sequences. Another method sometimes employed मा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identical मा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as needed मा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this is मा fact not a weakness मा युनिकोड itself, but only uncovers gaps मा rendering technology र fonts.

Some people, mostly मा Japan, oppose युनिकोड मा general, claiming technical limitations र political problems मा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removed मा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as used मा Chinese, Korean, र Japanese, मा spite of the presence of a majority of experts from all three countries मा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of forms मा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adopted मा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not included मा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which worked मा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII characters मा e-mail, depending on whether the characters are मा e-mail headers such as the "Subject:" or मा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specified मा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोड मा e-mail has been very slow. Most East-Asian text is still encoded मा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to change मा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the order मा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point ending मा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressed मा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogs मा computing environments; र operating systems र applications are becoming increasingly intelligent मा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input', मा Mac OS X र मा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browser मा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.


So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



युनिकोड कम्प्युटरको एक अन्तर्राष्ट्रिय गुणस्तर हो जसको उदेश्य मानिसले कम्प्युटरमा भण्डारण गर्न चाहने हरेक दस्तावेजका लिपिलाई सङ्केतन (encode) गर्ने माध्यम प्रदान गर्नु हो। This includes all s stillमा active use today, many scripts known only by s, र s which do not strictly represent scripts, like , र .

The creation of युनिकोड is an ambitious to replace existing s, many of which are shortमा size र problematicमा environments. Despite technical problems र limitations र criticism on process, today युनिकोड is considered the most complete character set र one of the largest, र has become the dominant encoding schemeमा of र multilingual environments. Many recent standards such as , as well as such as s, have adopted युनिकोड as an underlying scheme to represent text.

It is the explicit aim of युनिकोड to transcend the limitations of traditional s such as those defined by the standard, which are usedमा the various countries of the world, but are largely incompatible with each other. One problem with traditional character encodings is that they allow for कम्प्युटर processing (usually हरू र the local language), but not for multilingual कम्प्युटर processing (कम्प्युटर processing of arbitrary languages mixed with each other).

युनिकोडमा intent encodes the underlying characters र not variant s for such characters. In the case of s, this sometimes leads to controversies over what is the underlying character र what is the variant glyph (see ).

युनिकोड's roleमा text-processing is to provide a unique code point — not a glyph — for each character. In other words, युनिकोड is used to represent a characterमा an abstract way, र leaves the visual rendering (size, shape or style) to another program, such as a or .

This simple aim is greatly complicated by another aim, which is to provide lossless conversion amongst different existing encodingsमा order to ease the transition.

The युनिकोड standard also includes a number of related items, such as character properties, text normalisation forms, र bidirectional display order (for the correct display of text containing both right-to-left scripts, such as or , र left-to-right scripts).

In 1997 a proposal was made by to encode the characters of the Klingon languageमा Plane 1 of ISO/IEC 10646-2. The proposal was rejectedमा 2001 as "inappropriate for encoding" — not because the proposal was technically faulty, but because users of Klingon normally read र write र exchange dataमा Latin transliteration. The elvish scripts Tengwar र Cirth from J. R. R. Tolkien's Middle-earth setting were proposed for inclusionमा Plane 1मा 1993. The draft was withdrawn to incorporate changes suggested by Tolkienists, र is as of 2004 still under consideration.

The युनिकोड Consortium, basedमा California, is the organization that develops the युनिकोड standard. It is an organization open to any company or individual willing to pay the membership dues. Members include virtually all of the main कम्प्युटर software र hardware companies with any interestमा text processing standards, such as Apple Computer, Microsoft, IBM, Xerox, HP, Adobe Systems र many others.

The Consortium first published "The युनिकोड Standard" (ISBN 0-321-18578-1)मा 1991, र continues to develop standards based on that original work. युनिकोड was developedमा conjunction with the International Organization for Standardization र it shares its character repertoire with ISO/IEC 10646. युनिकोड र ISO/IEC 10646 are equivalent as character encodings, but "The युनिकोड Standard" contains much more information for implementers, covering,मा depth, topics such as bitwise encoding, collation, र rendering, र enumerating a multitude of character properties, including those needed for BiDi support. The two standards also have slightly different terminology.

gd:sf/ xl/x/ hL, tkfO{sf] cGtjftf{ ;'g]kl5 dnfO{ klg cfkm\g} af/]df s]xL hfGg] lh1f;f eof] cfzf 5 tkfO{sf] ;xL ;'emfax? kfpFg]5' .d]/f] ;Dk"0f{ 8s'd]G6sf]] gfd sdnf /fO{ xf] t/ Hof]lt;zf:q cg';f/ 8]lg;f / d]/f] hGdldlt @)#(.!.!* zlgaf/ a]n'sf * ah]kl5 ( ah]sf] aLrdf xf] . d]/f] gfd d]/f] nflu sltsf] kmfkg] vfnsf] 5 ;fy} d}n] jt{dfg d]/f] l:yltaf6 ;'wf/ x'gsf] nflu s] s;/L ubf{ pko'Qm x'G5 eljiosf] af/]df atfO{lbg'xf]nf . 

So far, it has only been said that युनिकोड is a means to assign a unique number for all characters used by humansमा written language. How these numbers are storedमा text processing is another matter; problems result from the fact that much softwareमा the West has so far been written to deal with 8-bit character encodings only, र युनिकोड support has only been added slowlyमा recent years. Similarly,मा the East the double-byte character encodings cannot evenमा principle encode more than 65,536 characters, रमा practice the limit imposed by the architectures chosen is much lower. This is not enough for the needs of scholars of the Chinese language alone.

The internal logic of much 8-bit legacy software typically permits only 8 bits for each character, making it impossible to use more than 256 code points without special processing, र 16-bit software is limited to some tens of thousands of characters, while युनिकोड is already up to more than 90,000 encoded characters. Several mechanisms have therefore been suggested to implement युनिकोड; which one is chosen depends on available storage space, source code compatibility, र interoperability with other systems.

The mapping methods are called the UTF (युनिकोड Transformation Format) र UCS (Universal Character Set) encodings. Among them are UTF-32, UCS-4, UTF-16, UCS-2, UTF-8, UTF-EBCDIC र UTF-7. The numbers indicate the number of bitsमा one unit, for UTF encodings, or bytes, for UCS encodings. In UTF-32 or UCS-4, one unit is enough for any character;मा the other cases, a variable number of units is used for each character. UTF-8 is the de-facto standard encoding for interchange of युनिकोड text with UTF-16 र UTF-32 being used mainly for internal processing.

The युनिकोड byte order mark (BOM) is specified for use at the beginnings of text filesमा UCS-2 र UTF-16 encodings. It has been adopted by some software developers for other encodings, including UTF-8, which does not need an indication of byte order. In this case it is an attempt to mark the file as containing युनिकोड text. The BOM is code point codice_1, which has the important property of being unambiguously interpretable regardless of which युनिकोड encoding is used. The units codice_2 र codice_3 never appearमा UTF-8, codice_4 (the result of byte-swapping codice_1) is not a legal character, र codice_1 is the Zero-Width No-Break Space (a character with no appearance र no effect other than preventing formation of ligatures). The same character converted to UTF-8 becomes the byte sequence codice_7.

युनिकोड includes a mechanism for modifying character shape र so greatly extending the supported glyph repertoire. This is the use of combining diacritical marks. They are inserted after the main character (it is possible to stack several combining diacritics over the same character). However, for reasons of compatibility, युनिकोड also includes a large quantity of precomposed characters. Soमा many cases there are many ways of encoding the same character. To deal with this, युनिकोड provides the mechanism of canonical equivalence.

The situation with Hangul is similar. युनिकोड provides the mechanism for composing Hangul syllables with Hangul Jamo. However, the precomposed Hangul syllables (11,172 of them) are also provided.

The CJK ideographs currently are encoded onlyमा their precomposed form. Still, most of those ideographs are evidently made up of simpler elements, soमा principle it would be possible to decompose them just as it is done with Hangul. This would greatly reduce the number of required codepoints, while allowing the display of virtually every conceivable ideograph (and so doing away with all problems of the Han unification). A similar idea is used for some input methods, such as Cangjie र Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs are not as simply decomposed or as regular as they seem.

Combining marks, like the complex script shaping required to properly render Arabic text र many other scripts, are usually dependent on complex font technologies, like OpenType (by Adobe र Microsoft), Graphite (by SIL International), र AAT (by Apple), by which a font designer includes instructionsमा a font telling software how to properly output different character sequences. Another method sometimes employedमा fixed-width fonts is to place the combining mark's glyph before its own left sidebearing; this method, however, only works for some diacritics र stacking will not occur properly.

As of 2004, most software still cannot reliably handle many features not supported by older font formats, so combining characters generally will not work correctly. Hypothetically, (precomposed e with macron र acute above) र (e followed by the combining macron above र combining acute above) are identicalमा appearance, both giving an e with macron र acute accent, but appearance can vary greatly across software applications.

Also underdots, as neededमा Indic Romanization, will often be placed incorrectly or worse. Sample:
Of course, this isमा fact not a weaknessमा युनिकोड itself, but only uncovers gapsमा rendering technology र fonts.

Some people, mostlyमा Japan, oppose युनिकोडमा general, claiming technical limitations र political problemsमा process, which people working on the युनिकोड standard claim are simply misunderstandings of the युनिकोड standard र the process by which it was created. The most common mistake, according to this view, is confusion between abstract characters र their highly variable visual forms (glyphs). On the other hand, whereas Chinese can readily read most types of glyphs used by Japanese or Koreans, Japanese often can recognize only a particular variant. The strongest denunciation of युनिकोड is at (also see a response, ) For example, opponents of युनिकोड sometimes claim even now that it cannot handle more than 65,535 characters, a limitation that was removedमा युनिकोड 2.0. युनिकोड has been decried as a plot against Asian cultures perpetrated by Westerners with no understanding of the characters as usedमा Chinese, Korean, र Japanese,मा spite of the presence of a majority of experts from all three countriesमा the Ideographic Rapporteur Group. The IRG advises the consortium र ISO on additions to the repertoire र on Han unification, the identification of formsमा the three languages which will be treated as stylistic variations of the same historical character. This unification is one of the most controversial aspects of युनिकोड.

युनिकोड is criticized for failing to allow for older र alternate forms of kanji, which, it is said, complicates the processing of ancient Japanese र uncommon Japanese names, although it follows the recommendations of Japanese scholars of the language र of the Japanese government. There have been several attempts to create an alternative to युनिकोड. Among them are TRON (although it is not widely adoptedमा Japan, some, particularly those who need to handle historical Japanese text, favor this), UTF-2000 र Giga Character Set (GCS). It is true that many older forms were not includedमा early versions of the युनिकोड standard, but युनिकोड 4.0 contains more than 90,000 Han characters, far more than any dictionary or any other standard, र work continues on adding characters from the early literature of China, Korea, र Japan.

Thai language support has been criticized for its illogical ordering of Thai characters. This complication is due to युनिकोड inheriting the Thai Industrial Standard 620, which workedमा the same way. This ordering problem complicates the युनिकोड collation process .

Despite technical problems र limitations र criticism on process, युनिकोड has emerged as the dominant encoding scheme. Windows NT र its descendants Windows 2000 र Windows XP make extensive use of UTF-16 as an internal representation of text. UNIX-like operating systems such as GNU/Linux, BSD र Mac OS X have adopted UTF-8, as the basis of representation of multilingual text.

MIME defines two different mechanisms for encoding non-ASCII charactersमा e-mail, depending on whether the characters areमा e-mail headers such as the "Subject:" orमा the text body of the message. In both cases, the original character set is identified as well as a transfer encoding. For e-mail transmission of युनिकोड the UTF-8 character set र the Base64 transfer encoding are recommended. The details of the two different mechanisms are specifiedमा the MIME standards र are generally hidden from users of e-mail software.

The adoption of युनिकोडमा e-mail has been very slow. Most East-Asian text is still encodedमा a local encoding such as Shift-JIS, र many commonly used e-mail programs still cannot handle युनिकोड data correctly, if they have some support at all. This situation is not expected to changeमा the foreseeable future.

Recent web browsers display web pages using युनिकोड if an appropriate font is installed (see Unicode र HTML).

Although syntax rules may affect the orderमा which characters are allowed to appear, both HTML 4.0 र XML 1.0 documents are, by definition, comprised of characters from the entire range of युनिकोड code points, minus only a handful of disallowed control characters र the permanently-unassigned code points D800-DFFF, any code point endingमा FFFE or FFFF र any code point above 10FFFF. These characters manifest either directly as bytes according to document's encoding, if the encoding supports them, or they may be written as numeric character references based on the character's युनिकोड code point, as long as the document's encoding supports the digits र symbols required to write the references (all encodings approved for use on the Internet do). For example, the references codice_807 codice_808 codice_809 codice_810 codice_811 codice_812 codice_813 codice_814 codice_815 (or the same numeric values expressedमा hexadecimal, with codice_17 as the prefix) display on your browser as Δ, Й, ק, م, ๗, あ, 叶, 葉 र 냻—if you have the proper fonts, these symbols look like the Greek capital letter "Delta", Cyrillic capital letter "Short I", Arabic letter "Meem", Hebrew letter "Qof", Thai numeral 7, Japanese Hiragana "A", simplified Chinese "Leaf", traditional Chinese "Leaf", र Korean Hangul syllable "Nyaelh", respectively.

Free र retail fonts based on युनिकोड are common, since first TrueType र now OpenType support युनिकोड. These font formats map युनिकोड code points to glyphs.

There are thousands of fonts on the market, but fewer than a dozen fonts attempt to support the majority of युनिकोड's character repertoire; these fonts are sometimes described as pan-युनिकोड. Instead, युनिकोड based fonts typically focus on supporting only basic ASCII र particular scripts or sets of characters or symbols. There are several reasons for this: applications र documents rarely need to render characters from more than one or two writing systems; fonts tend to be resource hogsमा computing environments; र operating systems र applications are becoming increasingly intelligentमा regard to obtaining glyph information from separate font files as they are needed. Furthermore, it is a monumental task to design a consistent set of rendering instructions for tens of thousands of glyphs; such a venture passes the point of diminishing returns for most typefaces.

युनिकोड characters which cannot be rendered are most often displayed as an open rectangle only, to indicate the position of the unrecognized character. Some attempts have been made to provide more information about these characters. The Apple "LastResort" font will display a substitute glyph indicating the युनिकोड range of the character र the SIL Unicode fallback font will display a box showing the hexadecimal scalar value of the character.


On Windows XP, any युनिकोड character can be input by pressing Alt, then, with Alt down (and using only the numeric keypad keys), pressing the decimal digits of the युनिकोड characters one after the other. For example, Alt, then, with Alt still down, 9, then 6 र then 0 yields π (Greek lowercase letter Pi). For values less than 256, precede the digits with a 0, to avoid code page translation (see Extended ASCII), e.g. Alt 0, 1, 6, 5 yields ¥.

Word 2003 also allows for entering युनिकोड characters by spelling out the code first, e.g. 014B for the 'ng'-symbol र then hitting 'Alt' plus 'X' to substitute the string to the left by its युनिकोड character.

Macintosh users have a similar feature with an input method called 'Unicode Hex Input',मा Mac OS X रमा Mac OS 8.5 र later: hold down the Option key, र type the four-hex-digit युनिकोड code point. Handling of code-points above 0xFFFF is done by entering a surrogate pair; they will be converted into a single character automatically. Mac OS X (version 10.2 र newer) also has a 'Character Palette', which allows users to visually select any युनिकोड character from a table organized numerically, by युनिकोड block, or by a selected font's available characters.

Gnome2 follows ISO 14755. Hold down Ctrl र Shift र enter the hexadecimal युनिकोड value.

The Opera web browserमा version 7.5 र over allows users to enter any युनिकोड character directly into a text field by typing its hexadecimal code, selecting it, र pressing alt+x.



यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राखन जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यिनी लिपिहरु लाई लिखने/पढने को लागि इनपुट मेथड एडिटर र फण्ट-फाइलें जरूरी छन्। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF7, UTF8, UTF16 या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राखन जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यिनी लिपिहरु लाई लिखने/पढने को लागि इनपुट मेथड एडिटर र फण्ट-फाइलें जरूरी छन्। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF7, UTF8, UTF16 या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF7, UTF8, UTF16 या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF7, UTF8, UTF16 या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF7, UTF8, UTF16 या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अंग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप से, नम्बरबाट सम्बंध राखछन। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




यूनिकोड (Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक संगठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र संगठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन संगठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरु मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरु मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरू मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरु संग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरु संग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरु को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरु र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरु को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरू मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरुसँग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरुसँग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै संचालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरू को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरू र वेबसाइटों मा शामिल गर्न से, परंपरागत उपकरणहरू को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरू मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरुसँग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण संग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न संकेत लिपि प्रणालिहरु थिए। कुनै एक संकेत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय संघ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न संकेत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै संकेत लिपि पर्याप्त थिएन।

यो संकेत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ संकेत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न संकेत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न संकेत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरुसँग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै सञ्चालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरू को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरू र वेबसाइटों मा शामिल गर्न से, परम्परागत उपकरणहरू को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरू मा उपयोग गरिन सक्छ। यसले आँकडहरुलाई बिना कुनै बाधा को विभिन्न प्रणालिहरुसँग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण सङ्ग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न सङ्केत लिपि प्रणालिहरु थिए। कुनै एक सङ्केत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय सङ्घ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न सङ्केत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै सङ्केत लिपि पर्याप्त थिएन।

यो सङ्केत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ सङ्केत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरुको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न सङ्केत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न सङ्केत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरुसँग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईं को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरुको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार




याहा कोहि Unicode), प्रत्येक अक्षर को लागि एक विशेष संख्या प्रदान गर्दछ, चाहे कुनै पनि कम्प्युटर प्लेटफर्म, प्रोग्राम अथवा कुनै पनि भाषा हो। यूनिकोड स्टैंडर्ड को एपल, एच.पी., आई.बी.एम., जस्ट सिस्टम, माइक्रोसफ्ट, ओरेकल, सैप, सन, साईबेस, यूनिसिस जस्तो उद्योग को प्रमुख कम्पनिहरु र धेरै अन्य ले अपनाएको छ। यूनिकोड को आवश्यकता आधुनिक मानदंडों, जस्तै एक्स.एम.एल, जावा, एकमा स्क्रिप्ट (जावास्क्रिप्ट), एल.डी.ए.पी., कोर्बा 3.0, डब्ल्यू.एम.एल को लागि हुन्छ र यो आई.एस.ओ/आई.ई.सी. 10646 को लागू गर्ने अधिकारिक तरीका छ। यो धेरै सञ्चालन प्रणालिहरु, सबै आधुनिक ब्राउजरों र धेरै अन्य उत्पादनहरु मा हुन्छ। यूनिकोड स्टैंडर्ड को उत्पति र यसको सहायक उपकरणहरू को उपलब्धता, हाल नै को अति महत्त्वपूर्ण विश्वव्यापी सफ्टवेयर प्रौद्योगिकी रुझानों मध्ये छन्।

यूनिकोड को ग्राहक-सर्भर अथवा बहु-आयामी उपकरणहरू र वेबसाइटों मा शामिल गर्न से, परम्परागत उपकरणहरू को प्रयोग गरे अपेक्षा खर्च मा अत्यधिक बचत हुन्छ। यूनिकोड भन्दा एक यस्तो एक्लो सफ्टवेयर उत्पादन अथवा एक्लो वेबसाइट मिलछ, जसलाई री-इंजीनियरिंग को बिना विभिन्न प्लेटफर्महरु, भाषाहरु र देशहरू मा उपयोग गरिन सक्छ। यसले आँकडहरूलाई बिना कुनै बाधा को विभिन्न प्रणालिहरूसँग भएर ले जाया जान सक्छ।

यूनिकोड प्रत्येक अक्षर को लागि एक विशेष नम्बर प्रदान गर्दछ,

कम्प्युटर, मूल रूप मा, नम्बरसग सम्बंध राख्छ। यो प्रत्येक अक्षर र वर्ण को लागि एक नम्बर निर्धारित गरेर अक्षर र वर्ण सङ्ग्रहित गर्छन। यूनिकोड को आविष्कार होने भन्दा पहिले, यस्तो नम्बर दिन को लागि सैंकडों विभिन्न सङ्केत लिपि प्रणालिहरु थिए। कुनै एक सङ्केत लिपि मा पर्याप्त अक्षर हैन हुन सक्छन् : उदाहरण को लिए, यूरोपीय सङ्घ को एक्लै ही, आफ्नो सबै भाषाहरु को कवर गर्न को लागि अनेक विभिन्न सङ्केत लिपिहरु को आवश्यकता हुन्छ। अङ्ग्रेजी जस्तो भाषा को लागि पनि, सबै अक्षरहरु, विरामचिन्हों र सामान्य प्रयोग को प्रौद्योगिकी प्रतीकहरु हेतु एक नै सङ्केत लिपि पर्याप्त थिएन।

यो सङ्केत लिपि प्रणालिहरु मास्पर विरोधी पनि छन्। यसैको लागि, दुइ सङ्केत लिपिहरु दुइ विभिन्न अक्षरहरु को लिए, एक नै नम्बर प्रयोग गर्न सक्छं, अथवा समान अक्षर को लागि विभिन्न नम्बरहरूको प्रयोग गर्न सक्छं। कुनै पनि कम्प्युटर (विशेष रूप ले सर्वर) को विभिन्न सङ्केत लिपिहरु संभालनी पडती है; फेरि पनि जब दुइ विभिन्न सङ्केत लिपिहरु अथवा प्लेटफर्मों को बीच डाटा पठाइन्छ त उन डाटा को संधै खराब भएको जोखिम रहन्छ।

यूनिकोड देखि यो सबै केहि बदल रहेको छ !

१) यो विश्व को सबै लिपिहरूसँग सबै संकेतहरु को लागि एक अलग कोड बिन्दु प्रदान गर्दछ।

२) यो वर्णहरु (कैरेक्टर्स) को एक कोड दिइन्छ, न कि ग्लिफ (glyph) को।

३) जहाँ पनि सम्भव यूनिकोड हुन्छ, यो भाषाहरु को एकीकरण गर्ने प्रयत्न गर्दछ। त्यहि नीति को तहत सबै पश्चिम यूरोपीय भाषाहरु को लैटिन को अन्तर्गत समाहित गरिएको छ; सबै स्लाविक भाषाहरु को सिरिलिक (Cyrilic) को अन्तर्गत राखाइएको छ; हिन्दी, संस्कृत, मराठी, नेपाली, सिन्धी, कश्मीरी आदि को लागि 'देवनागरी' नाम ले एक नै ब्लक दिइएको छ; चीनी, जापानी, कोरियाई, वियतनामी भाषाहरु को 'युनिहान्' (UniHan) नाम ले एक ब्लक मा राखाइएको छ; अरबी, फारसी, उर्दू आदि को एक नै ब्लक मा राखाइएको छ।

४) बायाँ भन्दा दायाँ लिखी जाने वाला लिपिहरु को अतिरिक्त दाएँ-से-बाएँ लिखी जाने वाला लिपिहरु (अरबी, हिब्रू आदि) को पनि यसमा शामिल गरिएको छ। माथि देखि तल को तर्फ लिखी जाने वाला लिपिहरु को अझै अध्ययन गरे जा रहेको छ ।

५) यो ध्यान राख्न जरूरी छ कि यूनिकोड केवल एक कोड-सारणी छ। यि लिपिहरु लाई लिख्न/पढ्ने क लागि इनपुट मेथड एडिटर र फण्ट-फाइल जरूरी छ। 

५) यूनिकोड १६ बिट्स को एक ईकाई को रूप मा लेकर चल्छ।





यूनिकोड, आस्की तथा अन्य कैरेकटर कोडों को अपेक्षा अधिक स्मृति (मेमोरी) लिन्छ। कितनी अधिक स्मृति लगेगी यो यस कुरा मा निर्भर गर्दछ कि तपाईँ को सा यूनिकोड प्रयोगएर रहे छन्। UTF७, UTF८, UTF१६ या वास्तविक यूनिकोड - एक अक्षर अलग-अलग बाइट प्रयोग गर्छन।






यूनिकोड कन्सर्शियम, एक लाभ न कमाने वाला एक सङ्गठन हो जसको स्थापना यूनिकोड स्टैंडर्ड, जो आधुनिक सफ्टवेयर उत्पादनहरु र मानकहरु मा पाठ को प्रस्तुति को निर्दिष्ट गर्दछ, को विकास, विस्तार र यसको प्रयोग लाई बढावा दिन को लागि गरिएको थियो। यस कन्सर्शियम को सदस्यहरु मा, कम्प्युटर र सूचना उद्योग मा विभिन्न निगम र सङ्गठन शामिल छन्। यस कन्सर्शियम को वित्तपोषण पूर्णतः सदस्यहरु को शुल्क देखि गरिन्छ। यूनिकोड कन्सर्शियम मा सदस्यता, विश्व मा कहीं पनि स्थित उन सङ्गठनहरु र व्यक्तिहरु को लागि खुली छ जो यूनिकोड को समर्थन गर्छन र जो यसको विस्तार र कार्यान्वयन मा सहायता गर्न चाहते छन्।



यदि कुनै लेख कुनै ठाँउ मा कुनै यस्तो फंन्ट को प्रयोगएर को लेखाइएको छ जो कि यूनिकोड छैन त फन्ट परिवर्तक प्रोग्रामहरूको प्रयोग गरेर उसलाई यूनिकोड मा बदलन सकिन्छ।

विस्तृत जानकारी को लागि हेर्नुहोस - 'फण्ट परिवर्तक'

याहू जस्तै इमेल सेवाहरू मा यूनिकोड कैरेक्टर विकृत भए पछि मूल इमेल प्राप्त गरेर पढने को ओनलाईन औजार





</doc>
